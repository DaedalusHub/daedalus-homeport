name: Node.js CI

on:
    push:
        branches: [ 'main' ]
    pull_request:
        branches: [ 'main' ]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 16.x, 18.x ]

        steps:
            -   uses: actions/checkout@v3
            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v3
                with:
                    node-version: ${{ matrix.node-version }}
                    cache: 'yarn'
            -   run: yarn install --frozen-lockfile
            -   run: yarn build

    lint:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-node@v3
                with:
                    node-version: 16.x
                    cache: 'yarn'
            -   run: yarn install --frozen-lockfile
            -   run: yarn lint

    test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-node@v3
                with:
                    node-version: 18.x
            -   run: yarn install --frozen-lockfile
            -   name: Install Playwright dependencies
                run: yarn playwright install --with-deps
            -   name: Start development server
                run: yarn dev:test &
                env:
                    SERVER_RUNNING: 'true'
            -   name: Wait for server to start
                run: sleep 30
            -   name: Run Playwright tests
                run: yarn test
                env:
                    CI_ENV: true
                    SERVER_RUNNING: 'true'
            -   name: Upload test results
                if: always()
                uses: actions/upload-artifact@v3
                with:
                    name: playwright-report
                    path: playwright-report/
                    retention-days: 30
            -   name: Upload test artifacts
                if: failure()
                uses: actions/upload-artifact@v3
                with:
                    name: test-artifacts
                    path: test-results/**/*.*
            -   name: Upload coverage to Codecov
                run: yarn codecov
            -   name: Upload coverage reports to Codecov
                uses: codecov/codecov-action@v3
            -   name: Report test-coverage to DeepSource
                run: |
                    curl https://deepsource.io/cli | sh
                    yarn deepsource-coverage
            -   name: 'Qodana Scan'
                uses: JetBrains/qodana-action@main
                env:
                    QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
